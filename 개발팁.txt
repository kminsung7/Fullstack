개발 팁

첫째로는 개발자 도구나 피들러를 통해 호출되는 컨트롤러를 파악하고 그 컨트롤러에서 최종적으로 반환하는 값(전달하는 데이터 값) 들을 확인한다. (찾고자 하는 변수)
디버거를 잘사용해야함!
스텝인투는 함수안으로 스텝오버는 함수안으로 들어가지 않고 다음라인!
디버깅할때 첫째로 내가 원하는 변수에 값이 담기는 순간을 찾기위해서는 주로 스텝오버를 사용하며 담기는 순간 그 실행된 코드를 찾는다.
그리고 안으로 스텝인투로 들어가서 또다시 반복 스텝오버로 원하는 변수에 값이 담기는 로직을 찾는다.

보통 처음 컨트롤러에 의해 어떤 jsp 파일이 호출 되는데 그 jsp 파일에는 여러 js(스크립트) 파일들이 포함되어 있다. 우리 회사는 항상 대부분의 jsp파일 안에 invoker라는 객체를 초기화 시키는 스크립트 함수를 포함한다.
이 invoker 함수는 invoker 함수안에 각 js파일들의 객체들을 불러 들이고 그안에 또 필요한 param 값을 넣는데 보통 처음 이 jsp파일을 호출한 컨트롤러의 request에서 값을 구해온다. 이렇게 만들어진 함수 객체로 
jsp 파일안에 포함된 각각의 js파일들이 실행 된다. 여기서 바로 항상 의문이였던 어디서 정의 된건지 알 수 없었던 param 값이 앞에서 말한 param 값이다.

개발자도구나 피들러는 https는 탐색 불가능 그러니 https 에서 s를 빼준 http로 요청하자
그리고 어떤 버튼을 클릭했을때 요청하는 것을 피들러로는 요청 순서 까지 알 수 있다, 이것 보다 더 좋은 점은 그 요청한 것이 최종적으로 반환하는 json을 전부 다 볼 수 있게 해준다.
이 기능을 적극 활용 하자

팝업 화면 같은거에서는 팝업이 띄어졌을때 다시 개발자 도구 들어가고 새로고침 눌러야 디버거 걸림

* 일감이 들어왔을때 바로 로컬 세팅 부터 하는게 아니라 자세히 무엇을 요청한건지 살펴보고 기능,오류,공수산정 문제인지 파악
그리고 실제 확인한 뒤에 비슷한 일감인 이미 다른 선배분들이 처리한 것이나 깃에서 참고 하여 빠르게 일 처리하자

putty는 원격 서버 접속 용도 (개발 서버, 운영 서버)
filezilla는 수동으로 class 파일과 js, jsp 파일 등을 서버 프로젝트에 반영하기 위함 => 젠킨스(깃)에 한번에 깔끔하게 머지하기 위해 미리 수동 반영으로 확인

코드 단 한줄도 빠짐없이 다 해석해서 의미를 알자

서버 시작 완료는 콘솔창에 server startup 뜸

디비 건드릴때 update나 delete 구문 쓸때 항상! 조심하기
파일 다 날라갈 수도 있으니

무조건 select 먼저 쳐서 where 조건 절 쳐서 내가 수정하고자 하는 데이터가
맞는지 확실히 확인해보고 update delete 쿼리 하자

별 이상 없는 거 같은데 서버 실행 안될 경우 clean해주기

서버 키거나 끄는거 안먹힐 때 : 빨간색 정지 버튼 눌르고 프로그레스 진행상황에서도 정지 누르고
콘솔창에 X아이콘 두개 있는거 누르기

*** 서버 부팅 문제는 메모리 관련 문제일 수도 있음 out of memory와 같은 로그 뜨면  
     open launch configuration - argument에서 메모리 설정 높여준다***
*** link with editor => 파일 경로 쉽게 찾아줌 ***
*** 프로젝트명 우클릭 - team - Synchronize Workspace => 로컬과 리모트에 있는 파일 값을 비교 해주는 기능 ***
*** 꼭 주석이 아니더라도 변수명이나 함수명을 어림짐작으로 로직을 파악해보자! ***
*** 디버깅을 할때는 의심가는 곳에 브레이크 포인트를 찍고 하나씩 넘겨보기 그러면 알 수 있음 ***
*** 첫 요청 경로를 찾을 때는 개발자도구의 네트워크 요청을 파악해 컨트롤러를 먼저 찾아가자
       , 뭔가 내부적으로 로직이 필요해 변환 된 데이터가 생성되는건 서비스를 찾아가자 ***
*** 디버깅 잘하기!! ***
*** DB 자체에 html 코드를 담는 경우도 있다 ***
*** 모듈 접두사 알면 빠르게 코드 찾을 수 있음 ***
*** 보통 어떤 요소를 감싸는 가장 큰 테두리 요소에는 id 값이 있고 그 아이디값을 db에는 그 id 값에 관련된 다른 컬럼들을 저장하고 있어
     그 id를 이용해 다른 필요한 컬럼들을 구할 수 있음 ***
*** 이클립스 라인에 대고 우클릭 add bookmark 기능 , markers는 오류 탐색 쉽게 가능 ***
*** 스프링 메시지 = 다국어처리 => properties나 js파일에 있음 text보다 우선순위 높음 ***
*** server에서 Modules에서 변경을 하고 저장하면 server.xml 파일이 초기화 된다. ***

디버깅 단축키
- step into : 한 라인씩 넘어가되 함수도 있으면 함수 안까지 파고듬 (이클립스 => f5 , 개발자도구 => f9)
- step over : 한 라인씩 넘어가되 함수를 만나도 그냥 다음 라인으로 넘어감 (이클립스 => f6 , 개발자도구 => f10)
- step return : 함수 안에서 바로 탈출 (이클립스 => f7 , 개발자도구 => f11)
- resume : 다음 브레이크 포인트로 바로 이동 (이클립스 => f8 , 개발자도구 => f8)

* simple sticky note 일단 다운로드 받자 *

개발자 도구 html 요소 선택 단축키 : Ctrl + Shift + C